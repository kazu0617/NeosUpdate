**2021.1.17.998**
原文はこちら: https://discord.com/channels/402159838827905024/469131434628612116/800406216886059037
デスクトップモードでの作業が活発になり始めているので、基本的なアーキテクチャの変更と追加、特にレンダリングルート、見え方、耳(リスナー)の変換をオーバーライドする機能によって実装された、最初のそれらに関連する成果について説明します。

現在、2つの主要な機能があります。1つはアバター用で、カスタムセットアップを作成するための完全なコントロールを提供し、ユーザーがどこから「見て」「聞いて」いるのかをオーバーライドしたり、実際のアバターのボディの外に出したりすることができ、ストリーマーカメラの視点からすべてのオーディオをレンダリングする簡単な機能を提供し、空間化されたソースの視聴者にとってフッテージオーディオがより意味のあるものになります。
もう1つの重要なことは、クラウドインフラストラクチャの再編成と最適化です。主な目的は、コストを削減し、パフォーマンスと拡張性を向上させるための非効率性を減らすことです。変更の影響を引き続き監視していくとともに、今後の予定もあります。

他にもたくさんの小さな追加、微調整、バグ修正があります。デスクトップモードも少し変更を加えています。まだ使えるものではありませんが、形になり始めています。近日中にもっと多くのことができるようになります！
**新機能(New Features)**:
- UserRootコンポーネントにSlot参照を割り当てることで、ワールドでの実際のUserRootを保持しながら、オーディオビジュアル出力のためのユーザーのルート(Root)、見る場所(View)、"耳"の変換をオーバーライドするメカニズムを追加しました。
-- 多くのユーザーにとってはめまいがするような実際の頭の動きを否定することになるので、VR ユーザーにはビューは控えめに使用すべきであることに注意してください。アウトオブボディ体験を作りたい場合は、代わりにルートをオーバーライドしてください。
-- アバターの頭の上にビューのオーバーライドを置くことで、ビューは頭と一緒に動きますが、アバターの動きを使うことができますが、1:1、ぴったり合った形でない動きは吐き気を催すこともあるので注意してください。この機能をアバターの標準機能として使用することは**(たとえ微妙であっても)強くお勧めしません**。
- `AvatarUserRootOverrideAssigner` を追加しました。これは、装備したアバターからルート、ビュー、耳を上書きできるようにするものです。(GearBell, Abysmal, ProbablePrime, Shifty | Quality Control Lead, Haydenさんのリクエスト)。
-- コンポーネントはリアルタイムで更新されます。 `Override target` を nullに設定して無効にしたり、ターゲットオブジェクトに変更して新しいターゲットを動的に割り当てることができます。
- インタラクティブカメラダイアログに「カメラビューからのオーディオ(Audio from camera viewpoint)」設定を追加しました。カメラ視点からのオーディオをレンダリングします。(Nexulan さんや他の様々な方からリクエストがありました)
-- これは、空間化されたオーディオのストリームで、視聴者が混乱しないようにするために便利ですが、その代償として、ストリーマーが混乱することがあります。
- `EyeLinearDriver` に `LookLeft` / `LookUp` / `LookRight` / `LookDown` を追加しました。これにより、目が現在どこを見ているかに基づいて0～1の値(ブレンドシェイプなど)を割り当て(Drive)できるようになりました。
-- これは、特定の方向を見たときに目をモーフィングする追加のブレンドシェイプを割り当て(Drive)るために使用することができます。
-- `LookMultiply` / `LookPower` フィールドを使用して値のレスポンスを制御できます。
- インスペクタに `サイドの抽出(Extract Sides)` オーディオ処理オプションを追加し、ステレオ / クワッドトラックからセンターチャンネルを削除するようにしました。
-- 通常はモノラルで中央に配置されている音楽トラックからボーカルを削除するために使用できます。
- モデルのインポート設定 にある 高度な設定に `鏡面反射(スペキュラー)を優先` を追加し、使用することでインポート時にPBSマテリアルのSpecularバリアントを優先するようになりました。(Robyn (QueenHidi)さんからのリクエスト)
- レクトテキスト入力ノード(x, y, width, height)を追加しました。
-- これにより、Rect値のドライバノードまたは直接入力を抽出できるようになりました(chemicalcrux氏のレポートに基づきます)。

**進行中の機能(Work-in-progress features)**:
- いつでも変更可能な `VR_Active` 状態を使用して、VRとScreenの2つのトグル可能なレンダリング出力をサポートするようにNeosの入出力システムを拡張しました(テスト目的では、現在はF8キーにバインドされていますが、まだ使用可能な状態にはなっていません)。
- 統一された Neos のヘッド出力システムは、重複を削除し、非推奨バージョンを削除することで、コードと管理を簡素化するようになります。
- ユーザーと対応するノードに `VRアクティブ` 状態を追加し、ユーザーが現在VRモードかスクリーンモードかを判断するようになりました。
-- レガシースクリーンモード(現在のスクリーンモード)は `VRモード` として扱われることに注意してください。この情報は、適切なデスクトップモードが完全に実装されたときに役立つでしょう。

**微調整(Tweaks)**:
- クラウドストレージシステムのアーキテクチャの一部を再設計し、構成の異なる複数のストレージサービスを利用してコスト削減とパフォーマンスの最適化を実現しました。
-- あらゆる運用データ(ファイルアップロードのチャンク、アセットのバリアント計算、サムネイル、ステータスの更新、関連するキュー/テーブルオブジェクトとそれらの作業項目、一般的にそれが失われても大丈夫なもの)は、現在、地理的に冗長なストレージを使用することによる余分なコストを防ぐために、低冗長性、低レイテンシー、低運用コスト(SSDのバックアップ)ストレージシステムを使用しています。
-- 永久保存されたデータ(アセット、レコード)は、データセンターの災害時にも耐久性を確保するために、地理的に冗長化されたストレージを使用しています。
- クラウドリソースに不要な負荷をかけないように、アセットリストアの仕組みを一度にシングルワーカーのみで実行し、実行頻度を下げるように再設計しました。
- 旧式のセッションサムネイル拡張メカニズムを削除し、ネットワーク/クラウドAPIの負荷を軽減しました。
- モデルのインポート設定にある 高度な設定にある `Setup IK` を無効にすると、二足歩行検知レポートが生成されなくなるようになりました(H3BO3とchemicalcruxによるレポートを基にしています)。
- CloudXの依存関係と関連ライブラリのアップグレードを行いました。
- Unity 2019.4.18f1にアップグレードしました。(2019.4.17f1からの更新です)

- Melnus さんによる日本語、エスペラント語、中国語の翻訳更新について統合しました。
- LUA さんによる韓国語の翻訳更新を統合しました。
- brodokkk さんによるフランス語の翻訳更新を統合しました。
- rampa_3 さんによるチェコ語の翻訳更新を統合しました。
- AnotherFoxGuy さんによるドイツ語の翻訳更新を統合しました。
- Shadow Panther さんによるロシア語の翻訳更新を統合しました。

**バグ修正(Bugfixes)**:
- インベントリとファイルブラウザの相互作用のセキュリティを改善しました(Komdog 氏のレポートに基づきます)。
- 固定クラウドアセットのバリアント処理で、関連するキューデータブロブが削除されないため、コストが増加していた問題を修正しました。
- クラウドのアセット依存処理でエラーが発生し、削除してもユーザーのクォータ制限を超えている場合にアセット依存が削除されないようにしていたため、ストレージの使用量が滞ってしまい、クラウドの処理に遅延が発生していたのを修正(DJNightmaresさんのレポートを参考にしています
- `ValueTag<T>` および `ValueFieldProxy<T>` コンポーネントに一般的な引数検証を追加しました(Cyroによる発見に基づいています)。
- `OnWorldSaved` / `OnFocusChanged` ワールドイベントの例外にガードを追加し、これらのイベントでのエラーがワールド全体をクラッシュさせないようにしました(Epsilion氏の報告に基づく)。
- ワールドオブジェクトの転送機構が既に破壊されたアイテムを転送しようとすると例外が発生する問題を修正しました。(Epsilion氏の報告に基づきます)
- `DestroyOnRelease` で設定したGrabbableは、貼り付け時にも自分自身をクリーンアップするようになりました。
- サポートされていないデータ型のドライバノードを抽出しようとしたときに LogiX ツールチップが例外をスローする問題を修正(chemicalcrux 氏の報告に基づきます)。
- 統合GPUに接続された画面でPortaitモードを使用した場合、デスクトップビューが正しく回転しないことがある問題を修正しました(Freyar 氏の報告に基づきます)。
- `FocusWorld` ノードがフレームごとにインパルスされたときに、ユーザーを現在の世界に保つことができるように修正(Cyro 氏によって報告されていました)
- ヘッドセットが切断されたときの問題を診断するために、ヘッドセットのプレゼンスステータスの変更のための追加のログ出力を追加 (Rue Shejn | Artist 3D 氏によるレポートに基づきます)。